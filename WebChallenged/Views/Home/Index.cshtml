@model Challenged.Domain.Entities.Response


    <div class="col-md-12">
        <div class="card card-primary">
            <div class="card-header">
                <h3 class="card-title">Serie</h3>

                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-tool" data-card-widget="remove">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="card-body">
                <div class="chart">
                    <canvas id="areaChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>
                </div>
            </div>
            <!-- /.card-body -->
        </div>
    </div>
<div class="col-12">
    <div class="card ">
        <div class="card-header">
            <h3 class="card-title">Series</h3>

            <div class="card-tools">
                <div class="input-group input-group-sm" style="width: 100%;">
                    <input type="text" name="table_search" class="form-control float-right" placeholder="Search">

                    <div class="input-group-append">
                        <button type="submit" class="btn btn-default">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <!-- /.card-header -->
        <div class="card-body table-responsive p-0">
            <table class="table table-hover text-nowrap">

                <tbody>
                    @if (Model != null)
                    {
                        foreach (var s in Model.seriesResponse.series)
                        {
                            <tr>
                                <td class="success">
                                    <h3>@s.IdSerie</h3>
                                </td>
                                <td>
                                    <h3>@s.Title</h3>
                                </td>
                            </tr>
                            <tr>
                                <th>Fecha</th>
                                <th>Dato</th>
                            </tr>
                            if (s.Data != null)
                            {
                                var js = Newtonsoft.Json.JsonConvert.SerializeObject(s.Data, Newtonsoft.Json.Formatting.Indented);
                                ViewBag.data = js;
                                foreach (var d in s.Data)
                                {
                                   
                                    <tr>
                                        <td>@d.Date</td>
                                        <td>@d.Data</td>
                                    </tr>
                                }
                            }
                        }
                    }

                </tbody>
            </table>
        </div>
        <!-- /.card-body -->
    </div>
    <!-- /.card -->
</div>  



@section scripts{
    <script>
        $(function () {
            var labels = [];
            var data = [];
            var labeljson = JSON.stringify(@Html.Raw(ViewBag.data));
            $.each(JSON.parse(labeljson), function (i, item) {
                labels.push(item.fecha);
                data.push(item.dato);
            });
            // Get context with jQuery - using jQuery's .get() method.
            var areaChartCanvas = $('#areaChart').get(0).getContext('2d')

            var areaChartData = {
                labels: labels,
                datasets: [
                    {
                        label: 'Digital Goods',
                        backgroundColor: 'rgba(60,141,188,0.9)',
                        borderColor: 'rgba(60,141,188,0.8)',
                        pointRadius: false,
                        pointColor: '#3b8bba',
                        pointStrokeColor: 'rgba(60,141,188,1)',
                        pointHighlightFill: '#fff',
                        pointHighlightStroke: 'rgba(60,141,188,1)',
                        data: data
                    },
                   
                ]
            }

            var areaChartOptions = {
                maintainAspectRatio: false,
                responsive: true,
                legend: {
                    display: false
                },
                scales: {
                    xAxes: [{
                        gridLines: {
                            display: false,
                        }
                    }],
                    yAxes: [{
                        gridLines: {
                            display: false,
                        }
                    }]
                }
            }

            // This will get the first returned node in the jQuery collection.
            var areaChart = new Chart(areaChartCanvas, {
                type: 'line',
                data: areaChartData,
                options: areaChartOptions
            })

        });
    </script>
}